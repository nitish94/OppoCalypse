{{define "form.tmpl"}}
{{template "base.tmpl" .}}
<div class="auth-container">
<h1>{{if .transaction}}Edit{{else}}New{{end}} Transaction</h1>
<form action="{{.action}}" method="POST">
    <div>
        <label for="transaction_date">Date</label>
        <input type="date" id="transaction_date" name="transaction_date" value="{{if .transaction}}{{.transaction.TransactionDate.Format "2006-01-02"}}{{else}}{{.now}}{{end}}" required>
    </div>
    <div>
        <label for="type_id">Type</label>
        <select id="type_id" name="type_id" required>
            <option value="1" {{if and .transaction (eq .transaction.TypeID 1)}}selected{{end}}>Income</option>
            <option value="2" {{if and .transaction (eq .transaction.TypeID 2)}}selected{{end}}>Expense</option>
            <option value="5" {{if and .transaction (eq .transaction.TypeID 5)}}selected{{end}}>Transfer</option>
        </select>
    </div>
    <div id="from_account_field" style="display: none;">
        <label for="from_account_id">From Account</label>
        <select id="from_account_id" name="from_account_id">
            <option value="">-- Select Account --</option>
            {{range .accounts}}
                <option value="{{.ID}}">{{.Name}}</option>
            {{end}}
        </select>
    </div>
    <div id="to_account_field" style="display: none;">
        <label for="to_account_id">To Account</label>
        <select id="to_account_id" name="to_account_id">
            <option value="">-- Select Account --</option>
            {{range .accounts}}
                <option value="{{.ID}}">{{.Name}}</option>
            {{end}}
        </select>
    </div>
    <div id="category_field">
        <label for="category_id">Category</label>
        <select id="category_id" name="category_id">
            <option value="">-- Select Category --</option>
            {{range .categories}}
                <option value="{{.ID}}" class="category-option category-{{.TypeID}}" {{if and $.transaction (eq .ID $.transaction.CategoryID)}}selected{{end}}>{{.Name}}</option>
            {{end}}
        </select>
    </div>
    <div>
        <label for="amount">Amount</label>
        <input type="number" id="amount" name="amount" step="0.01" value="{{if .transaction}}{{.transaction.Amount}}{{end}}" required>
    </div>
    <div>
        <label for="remarks">Remarks</label>
        <textarea id="remarks" name="remarks">{{if .transaction}}{{.transaction.Remarks}}{{end}}</textarea>
    </div>
    <button type="submit" class="btn">{{if .transaction}}Update{{else}}Create{{end}}</button>
</form>
</div>
<script>
document.addEventListener('DOMContentLoaded', function() {
    const typeSelect = document.getElementById('type_id');
    const fromAccountField = document.getElementById('from_account_field');
    const toAccountField = document.getElementById('to_account_field');
    const categoryField = document.getElementById('category_field');
    const categorySelect = document.getElementById('category_id');

    function toggleFields() {
        const selectedType = typeSelect.value;

        const isIncome = selectedType === '1';
        const isExpense = selectedType === '2';
        const isTransfer = selectedType === '5';

        toAccountField.style.display = isIncome || isTransfer ? 'block' : 'none';
        fromAccountField.style.display = isExpense || isTransfer ? 'block' : 'none';
        
        categoryField.style.display = isTransfer ? 'none' : 'block';
        categorySelect.disabled = isTransfer;

        // Filter categories
        for (const option of categorySelect.options) {
            if (option.value === "") continue;
            const optionType = option.className.split(' ')[1].split('-')[1];
            if (selectedType === optionType) {
                option.style.display = '';
            } else {
                option.style.display = 'none';
            }
        }
    }

    typeSelect.addEventListener('change', toggleFields);
    toggleFields(); // Initial call
});
</script>
{{end}}